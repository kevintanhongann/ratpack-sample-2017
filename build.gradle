buildscript {
    repositories {
        jcenter()
    }


    ext {
        assetPipelineVersion = '2.10.1'
    }

    dependencies {
        classpath 'com.h2database:h2:1.4.186'
//    classpath 'org.jooq:jooq-codegen:3.8.1'
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:${assetPipelineVersion}"
    }
}

plugins {
    id 'io.ratpack.ratpack-groovy' version '1.4.5'
}

repositories {
    jcenter()
}

apply plugin: 'asset-pipeline'

dependencies {
    compile ratpack.dependency('hikari')
    compile 'com.h2database:h2:1.4.186'
    compile group: 'org.grails', name: 'grails-datastore-gorm', version: '6.0.9.RELEASE'
    compile group: 'org.grails', name: 'grails-datastore-gorm-hibernate5', version: '6.0.9.RELEASE'
    // Default SLF4J binding.  Note that this is a blocking implementation.
    // See here for a non blocking appender http://logging.apache.org/log4j/2.x/manual/async.html
    runtime 'org.slf4j:slf4j-simple:1.7.12'
//  compile 'com.j256.ormlite:ormlite-core:4.48'
//  compile 'com.j256.ormlite:ormlite-jdbc:4.48'
//  compile 'org.jooq:jooq:3.8.1'
    compile "com.bertramlabs.plugins:ratpack-asset-pipeline:${assetPipelineVersion}"
}

//task jooqCodegen {
//  doLast {
//    String init = "$projectDir/src/main/resources/init.sql".replaceAll('\\\\', '/')
//    Configuration configuration = new Configuration()
//      .withJdbc(new Jdbc()
//      .withDriver("org.h2.Driver")
//      .withUrl("jdbc:h2:mem:todo;INIT=RUNSCRIPT FROM '$init'")
//    )
//      .withGenerator(new Generator()
//        .withDatabase(new Database()
//          .withName("org.jooq.util.h2.H2Database")
//          .withIncludes(".*")
//          .withExcludes("")
//          .withInputSchema("PUBLIC")
//        )
//      .withTarget(new Target()
//        .withDirectory("$projectDir/src/main/groovy")
//        .withPackageName("jooq")))
//    GenerationTool.generate(configuration)
//  }
//}
